"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.generateTemplate = void 0;
var prettier_1 = __importDefault(require("prettier"));
var logger_1 = __importDefault(require("./logger"));
var formatter = function (files, frms, separator) {
    var formatted = files.map(function (f) { return frms(f); });
    return formatted.join(separator);
};
var defaultPrettierOptions = {
    parser: 'babel'
};
exports.generateTemplate = function (loader) { return __awaiter(void 0, void 0, void 0, function () {
    var template;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                template = "// Auto-generated file created by react-native-storybook-loader\n  // Do not edit.\n  //\n  // https://github.com/elderfo/react-native-storybook-loader.git\n  \n  function loadStories() {\n  " + formatter(loader.storyFiles, function (file) { return "require('" + file + "');"; }, '\n') + "\n  }\n  \n  const stories = [\n  " + formatter(loader.storyFiles, function (file) { return "'" + file + "'"; }, ',\n') + "\n  ];\n  \n  module.exports = {\n    loadStories,\n    stories,\n  };\n  ";
                return [4 /*yield*/, makePrettier(template)];
            case 1: return [2 /*return*/, _a.sent()];
        }
    });
}); };
var makePrettier = function (template) { return __awaiter(void 0, void 0, void 0, function () {
    var prettierConfigFile, prettierConfig, err_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                _a.trys.push([0, 3, , 4]);
                return [4 /*yield*/, prettier_1["default"].resolveConfigFile()];
            case 1:
                prettierConfigFile = _a.sent();
                if (prettierConfigFile === null) {
                    logger_1["default"].info('Prettier configuration not detected, using default formatting.');
                    return [2 /*return*/, prettier_1["default"].format(template, defaultPrettierOptions)];
                }
                logger_1["default"].info("Attempting to use prettier configuration detected at " + prettierConfigFile);
                return [4 /*yield*/, prettier_1["default"].resolveConfig(prettierConfigFile)];
            case 2:
                prettierConfig = _a.sent();
                if (prettierConfig === null) {
                    logger_1["default"].warn('Prettier configuration was not found, using default formatting.');
                    return [2 /*return*/, prettier_1["default"].format(template, defaultPrettierOptions)];
                }
                // Since many prettier configs don't include the `parser` option (the
                // Prettier docs recommend against setting it and letting Prettier infer
                // based on the file-name), we include `...defaultPrettierOptions` here
                // before `...prettierConfig`.
                return [2 /*return*/, prettier_1["default"].format(template, __assign(__assign({}, defaultPrettierOptions), prettierConfig))];
            case 3:
                err_1 = _a.sent();
                logger_1["default"].warn("Something went awry while trying to get the prettier config, falling back to default formatting [" + err_1 + "]");
                return [2 /*return*/, prettier_1["default"].format(template, defaultPrettierOptions)];
            case 4: return [2 /*return*/];
        }
    });
}); };
//# sourceMappingURL=template.js.map