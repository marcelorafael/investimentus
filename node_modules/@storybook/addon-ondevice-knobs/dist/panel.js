"use strict";

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.symbol.iterator");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.map");

require("core-js/modules/es.date.to-string");

require("core-js/modules/es.function.bind");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.create");

require("core-js/modules/es.object.define-property");

require("core-js/modules/es.object.get-prototype-of");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.set-prototype-of");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.parse-float");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _native = _interopRequireDefault(require("@emotion/native"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _coreEvents = require("@storybook/core-events");

var _addonKnobs = require("@storybook/addon-knobs");

var _GroupTabs = _interopRequireDefault(require("./GroupTabs"));

var _PropForm = _interopRequireDefault(require("./PropForm"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var getTimestamp = function getTimestamp() {
  return +new Date();
};

var DEFAULT_GROUP_ID = 'Other';

var Touchable =
/*#__PURE__*/
_native["default"].TouchableOpacity(function (_ref) {
  var theme = _ref.theme;
  return {
    borderRadius: 2,
    borderWidth: 1,
    borderColor: theme.borderColor || '#e6e6e6',
    padding: 4,
    margin: 10,
    justifyContent: 'center',
    alignItems: 'center'
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFha0IiLCJmaWxlIjoiLi4vc3JjL3BhbmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZpZXcsIFRleHQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFNFTEVDVF9TVE9SWSwgRk9SQ0VfUkVfUkVOREVSIH0gZnJvbSAnQHN0b3J5Ym9vay9jb3JlLWV2ZW50cyc7XG5pbXBvcnQgeyBTRVQsIFNFVF9PUFRJT05TLCBSRVNFVCwgQ0hBTkdFLCBDTElDSyB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24ta25vYnMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9uYXRpdmUnO1xuaW1wb3J0IEdyb3VwVGFicyBmcm9tICcuL0dyb3VwVGFicyc7XG5pbXBvcnQgUHJvcEZvcm0gZnJvbSAnLi9Qcm9wRm9ybSc7XG5cbmNvbnN0IGdldFRpbWVzdGFtcCA9ICgpID0+ICtuZXcgRGF0ZSgpO1xuXG5jb25zdCBERUZBVUxUX0dST1VQX0lEID0gJ090aGVyJztcblxuY29uc3QgVG91Y2hhYmxlID0gc3R5bGVkLlRvdWNoYWJsZU9wYWNpdHkoKHsgdGhlbWUgfSkgPT4gKHtcbiAgYm9yZGVyUmFkaXVzOiAyLFxuICBib3JkZXJXaWR0aDogMSxcbiAgYm9yZGVyQ29sb3I6IHRoZW1lLmJvcmRlckNvbG9yIHx8ICcjZTZlNmU2JyxcbiAgcGFkZGluZzogNCxcbiAgbWFyZ2luOiAxMCxcbiAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbn0pKTtcblxuY29uc3QgUmVzZXRCdXR0b24gPSBzdHlsZWQuVGV4dCgoeyB0aGVtZSB9KSA9PiAoe1xuICBjb2xvcjogdGhlbWUuYnV0dG9uVGV4dENvbG9yIHx8ICcjOTk5OTk5Jyxcbn0pKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFuZWwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZSA9IHRoaXMuaGFuZGxlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVDbGljayA9IHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLnNldEtub2JzID0gdGhpcy5zZXRLbm9icy5iaW5kKHRoaXMpO1xuICAgIHRoaXMucmVzZXQgPSB0aGlzLnJlc2V0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5zZXRPcHRpb25zID0gdGhpcy5zZXRPcHRpb25zLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbkdyb3VwU2VsZWN0ID0gdGhpcy5vbkdyb3VwU2VsZWN0LmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLnN0YXRlID0geyBrbm9iczoge30sIGdyb3VwSWQ6IERFRkFVTFRfR1JPVVBfSUQgfTtcbiAgICB0aGlzLm9wdGlvbnMgPSB7fTtcblxuICAgIHRoaXMubGFzdEVkaXQgPSBnZXRUaW1lc3RhbXAoKTtcbiAgICB0aGlzLmxvYWRlZEZyb21VcmwgPSBmYWxzZTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgY2hhbm5lbCB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNoYW5uZWwub24oU0VULCB0aGlzLnNldEtub2JzKTtcbiAgICBjaGFubmVsLm9uKFNFVF9PUFRJT05TLCB0aGlzLnNldE9wdGlvbnMpO1xuICAgIGNoYW5uZWwub24oU0VMRUNUX1NUT1JZLCB0aGlzLnNlbGVjdFN0b3J5KTtcbiAgICBjaGFubmVsLmVtaXQoRk9SQ0VfUkVfUkVOREVSKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGNvbnN0IHsgY2hhbm5lbCB9ID0gdGhpcy5wcm9wcztcbiAgICBjaGFubmVsLnJlbW92ZUxpc3RlbmVyKFNFVCwgdGhpcy5zZXRLbm9icyk7XG4gICAgY2hhbm5lbC5yZW1vdmVMaXN0ZW5lcihTRUxFQ1RfU1RPUlksIHRoaXMuc2VsZWN0U3RvcnkpO1xuICB9XG5cbiAgb25Hcm91cFNlbGVjdChuYW1lKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGdyb3VwSWQ6IG5hbWUgfSk7XG4gIH1cblxuICBzZXRPcHRpb25zKG9wdGlvbnMgPSB7IHRpbWVzdGFtcHM6IGZhbHNlIH0pIHtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICB9XG5cbiAgc2V0S25vYnMoeyBrbm9icywgdGltZXN0YW1wIH0pIHtcbiAgICBpZiAoIXRoaXMub3B0aW9ucy50aW1lc3RhbXBzIHx8ICF0aW1lc3RhbXAgfHwgdGhpcy5sYXN0RWRpdCA8PSB0aW1lc3RhbXApIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBrbm9icyB9KTtcbiAgICB9XG4gIH1cblxuICByZXNldCA9ICgpID0+IHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGtub2JzOiB7fSB9KTtcbiAgICBjaGFubmVsLmVtaXQoUkVTRVQpO1xuICB9O1xuXG4gIHNlbGVjdFN0b3J5ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgY2hhbm5lbCB9ID0gdGhpcy5wcm9wcztcbiAgICB0aGlzLnNldFN0YXRlKHsga25vYnM6IHt9LCBncm91cElkOiBERUZBVUxUX0dST1VQX0lEIH0pO1xuICAgIGNoYW5uZWwuZW1pdChSRVNFVCk7XG4gIH07XG5cbiAgZW1pdENoYW5nZShjaGFuZ2VkS25vYikge1xuICAgIGNvbnN0IHsgY2hhbm5lbCB9ID0gdGhpcy5wcm9wcztcbiAgICBjaGFubmVsLmVtaXQoQ0hBTkdFLCBjaGFuZ2VkS25vYik7XG4gIH1cblxuICBoYW5kbGVDaGFuZ2UoY2hhbmdlZEtub2IpIHtcbiAgICB0aGlzLmxhc3RFZGl0ID0gZ2V0VGltZXN0YW1wKCk7XG4gICAgY29uc3QgeyBrbm9icyB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCB7IG5hbWUgfSA9IGNoYW5nZWRLbm9iO1xuICAgIGNvbnN0IG5ld0tub2JzID0geyAuLi5rbm9icyB9O1xuICAgIG5ld0tub2JzW25hbWVdID0ge1xuICAgICAgLi4ubmV3S25vYnNbbmFtZV0sXG4gICAgICAuLi5jaGFuZ2VkS25vYixcbiAgICB9O1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7IGtub2JzOiBuZXdLbm9icyB9KTtcblxuICAgIHRoaXMuc2V0U3RhdGUoXG4gICAgICB7IGtub2JzOiBuZXdLbm9icyB9LFxuICAgICAgdGhpcy5lbWl0Q2hhbmdlKFxuICAgICAgICBjaGFuZ2VkS25vYi50eXBlID09PSAnbnVtYmVyJ1xuICAgICAgICAgID8geyAuLi5jaGFuZ2VkS25vYiwgdmFsdWU6IHBhcnNlRmxvYXQoY2hhbmdlZEtub2IudmFsdWUpIH1cbiAgICAgICAgICA6IGNoYW5nZWRLbm9iXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG4gIGhhbmRsZUNsaWNrKGtub2IpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjaGFubmVsLmVtaXQoQ0xJQ0ssIGtub2IpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYWN0aXZlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKCFhY3RpdmUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IHsga25vYnMsIGdyb3VwSWQ6IHN0YXRlR3JvdXBJZCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIGNvbnN0IGdyb3VwcyA9IHt9O1xuICAgIGNvbnN0IGdyb3VwSWRzID0gW107XG5cbiAgICBsZXQga25vYnNBcnJheSA9IE9iamVjdC5rZXlzKGtub2JzKTtcblxuICAgIGNvbnN0IGtub2JzV2l0aEdyb3VwcyA9IGtub2JzQXJyYXkuZmlsdGVyKChrZXkpID0+IGtub2JzW2tleV0uZ3JvdXBJZCk7XG5cbiAgICBrbm9ic1dpdGhHcm91cHMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBjb25zdCBrbm9iS2V5R3JvdXBJZCA9IGtub2JzW2tleV0uZ3JvdXBJZDtcbiAgICAgIGdyb3VwSWRzLnB1c2goa25vYktleUdyb3VwSWQpO1xuICAgICAgZ3JvdXBzW2tub2JLZXlHcm91cElkXSA9IHtcbiAgICAgICAgcmVuZGVyOiAoKSA9PiA8VGV4dCBpZD17a25vYktleUdyb3VwSWR9Pntrbm9iS2V5R3JvdXBJZH08L1RleHQ+LFxuICAgICAgICB0aXRsZToga25vYktleUdyb3VwSWQsXG4gICAgICB9O1xuICAgIH0pO1xuXG4gICAgY29uc3QgYWxsSGF2ZUdyb3VwcyA9IGdyb3VwSWRzLmxlbmd0aCA+IDAgJiYga25vYnNBcnJheS5sZW5ndGggPT09IGtub2JzV2l0aEdyb3Vwcy5sZW5ndGg7XG5cbiAgICAvLyBJZiBhbGwgb2YgdGhlIGtub2JzIGFyZSBhc3NpZ25lZCB0byBhIGdyb3VwLCB3ZSBkb24ndCBuZWVkIHRoZSBkZWZhdWx0IGdyb3VwLlxuICAgIGNvbnN0IGdyb3VwSWQgPVxuICAgICAgc3RhdGVHcm91cElkID09PSBERUZBVUxUX0dST1VQX0lEICYmIGFsbEhhdmVHcm91cHNcbiAgICAgICAgPyBrbm9ic1trbm9ic1dpdGhHcm91cHNbMF1dLmdyb3VwSWRcbiAgICAgICAgOiBzdGF0ZUdyb3VwSWQ7XG5cbiAgICBpZiAoZ3JvdXBJZHMubGVuZ3RoID4gMCkge1xuICAgICAgaWYgKCFhbGxIYXZlR3JvdXBzKSB7XG4gICAgICAgIGdyb3Vwc1tERUZBVUxUX0dST1VQX0lEXSA9IHtcbiAgICAgICAgICByZW5kZXI6ICgpID0+IDxUZXh0IGlkPXtERUZBVUxUX0dST1VQX0lEfT57REVGQVVMVF9HUk9VUF9JRH08L1RleHQ+LFxuICAgICAgICAgIHRpdGxlOiBERUZBVUxUX0dST1VQX0lELFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBpZiAoZ3JvdXBJZCA9PT0gREVGQVVMVF9HUk9VUF9JRCkge1xuICAgICAgICBrbm9ic0FycmF5ID0ga25vYnNBcnJheS5maWx0ZXIoKGtleSkgPT4gIWtub2JzW2tleV0uZ3JvdXBJZCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChncm91cElkICE9PSBERUZBVUxUX0dST1VQX0lEKSB7XG4gICAgICAgIGtub2JzQXJyYXkgPSBrbm9ic0FycmF5LmZpbHRlcigoa2V5KSA9PiBrbm9ic1trZXldLmdyb3VwSWQgPT09IGdyb3VwSWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGtub2JzQXJyYXkgPSBrbm9ic0FycmF5Lm1hcCgoa2V5KSA9PiBrbm9ic1trZXldKTtcblxuICAgIGlmIChrbm9ic0FycmF5Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIDxUZXh0Pk5PIEtOT0JTPC9UZXh0PjtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFZpZXcgc3R5bGU9e3sgZmxleDogMSwgcGFkZGluZ1RvcDogMTAgfX0+XG4gICAgICAgIHtncm91cElkcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICA8R3JvdXBUYWJzIGdyb3Vwcz17Z3JvdXBzfSBvbkdyb3VwU2VsZWN0PXt0aGlzLm9uR3JvdXBTZWxlY3R9IHNlbGVjdGVkR3JvdXA9e2dyb3VwSWR9IC8+XG4gICAgICAgICl9XG4gICAgICAgIDxWaWV3PlxuICAgICAgICAgIDxQcm9wRm9ybVxuICAgICAgICAgICAga25vYnM9e2tub2JzQXJyYXl9XG4gICAgICAgICAgICBvbkZpZWxkQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgIG9uRmllbGRDbGljaz17dGhpcy5oYW5kbGVDbGlja31cbiAgICAgICAgICAvPlxuICAgICAgICA8L1ZpZXc+XG4gICAgICAgIDxUb3VjaGFibGUgb25QcmVzcz17dGhpcy5yZXNldH0+XG4gICAgICAgICAgPFJlc2V0QnV0dG9uPlJFU0VUPC9SZXNldEJ1dHRvbj5cbiAgICAgICAgPC9Ub3VjaGFibGU+XG4gICAgICA8L1ZpZXc+XG4gICAgKTtcbiAgfVxufVxuXG5QYW5lbC5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgY2hhbm5lbDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBlbWl0OiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcmVtb3ZlTGlzdGVuZXI6IFByb3BUeXBlcy5mdW5jLFxuICB9KS5pc1JlcXVpcmVkLFxuICBvblJlc2V0OiBQcm9wVHlwZXMub2JqZWN0LCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG59O1xuIl19 */");

var ResetButton =
/*#__PURE__*/
_native["default"].Text(function (_ref2) {
  var theme = _ref2.theme;
  return {
    color: theme.buttonTextColor || '#999999'
  };
}, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Qm9CIiwiZmlsZSI6Ii4uL3NyYy9wYW5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBTRUxFQ1RfU1RPUlksIEZPUkNFX1JFX1JFTkRFUiB9IGZyb20gJ0BzdG9yeWJvb2svY29yZS1ldmVudHMnO1xuaW1wb3J0IHsgU0VULCBTRVRfT1BUSU9OUywgUkVTRVQsIENIQU5HRSwgQ0xJQ0sgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWtub2JzJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vbmF0aXZlJztcbmltcG9ydCBHcm91cFRhYnMgZnJvbSAnLi9Hcm91cFRhYnMnO1xuaW1wb3J0IFByb3BGb3JtIGZyb20gJy4vUHJvcEZvcm0nO1xuXG5jb25zdCBnZXRUaW1lc3RhbXAgPSAoKSA9PiArbmV3IERhdGUoKTtcblxuY29uc3QgREVGQVVMVF9HUk9VUF9JRCA9ICdPdGhlcic7XG5cbmNvbnN0IFRvdWNoYWJsZSA9IHN0eWxlZC5Ub3VjaGFibGVPcGFjaXR5KCh7IHRoZW1lIH0pID0+ICh7XG4gIGJvcmRlclJhZGl1czogMixcbiAgYm9yZGVyV2lkdGg6IDEsXG4gIGJvcmRlckNvbG9yOiB0aGVtZS5ib3JkZXJDb2xvciB8fCAnI2U2ZTZlNicsXG4gIHBhZGRpbmc6IDQsXG4gIG1hcmdpbjogMTAsXG4gIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG59KSk7XG5cbmNvbnN0IFJlc2V0QnV0dG9uID0gc3R5bGVkLlRleHQoKHsgdGhlbWUgfSkgPT4gKHtcbiAgY29sb3I6IHRoZW1lLmJ1dHRvblRleHRDb2xvciB8fCAnIzk5OTk5OScsXG59KSk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhbmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5zZXRLbm9icyA9IHRoaXMuc2V0S25vYnMuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlc2V0ID0gdGhpcy5yZXNldC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2V0T3B0aW9ucyA9IHRoaXMuc2V0T3B0aW9ucy5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25Hcm91cFNlbGVjdCA9IHRoaXMub25Hcm91cFNlbGVjdC5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHsga25vYnM6IHt9LCBncm91cElkOiBERUZBVUxUX0dST1VQX0lEIH07XG4gICAgdGhpcy5vcHRpb25zID0ge307XG5cbiAgICB0aGlzLmxhc3RFZGl0ID0gZ2V0VGltZXN0YW1wKCk7XG4gICAgdGhpcy5sb2FkZWRGcm9tVXJsID0gZmFsc2U7XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjaGFubmVsLm9uKFNFVCwgdGhpcy5zZXRLbm9icyk7XG4gICAgY2hhbm5lbC5vbihTRVRfT1BUSU9OUywgdGhpcy5zZXRPcHRpb25zKTtcbiAgICBjaGFubmVsLm9uKFNFTEVDVF9TVE9SWSwgdGhpcy5zZWxlY3RTdG9yeSk7XG4gICAgY2hhbm5lbC5lbWl0KEZPUkNFX1JFX1JFTkRFUik7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG4gICAgY2hhbm5lbC5yZW1vdmVMaXN0ZW5lcihTRVQsIHRoaXMuc2V0S25vYnMpO1xuICAgIGNoYW5uZWwucmVtb3ZlTGlzdGVuZXIoU0VMRUNUX1NUT1JZLCB0aGlzLnNlbGVjdFN0b3J5KTtcbiAgfVxuXG4gIG9uR3JvdXBTZWxlY3QobmFtZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBncm91cElkOiBuYW1lIH0pO1xuICB9XG5cbiAgc2V0T3B0aW9ucyhvcHRpb25zID0geyB0aW1lc3RhbXBzOiBmYWxzZSB9KSB7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuXG4gIHNldEtub2JzKHsga25vYnMsIHRpbWVzdGFtcCB9KSB7XG4gICAgaWYgKCF0aGlzLm9wdGlvbnMudGltZXN0YW1wcyB8fCAhdGltZXN0YW1wIHx8IHRoaXMubGFzdEVkaXQgPD0gdGltZXN0YW1wKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsga25vYnMgfSk7XG4gICAgfVxuICB9XG5cbiAgcmVzZXQgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBjaGFubmVsIH0gPSB0aGlzLnByb3BzO1xuICAgIHRoaXMuc2V0U3RhdGUoeyBrbm9iczoge30gfSk7XG4gICAgY2hhbm5lbC5lbWl0KFJFU0VUKTtcbiAgfTtcblxuICBzZWxlY3RTdG9yeSA9ICgpID0+IHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGtub2JzOiB7fSwgZ3JvdXBJZDogREVGQVVMVF9HUk9VUF9JRCB9KTtcbiAgICBjaGFubmVsLmVtaXQoUkVTRVQpO1xuICB9O1xuXG4gIGVtaXRDaGFuZ2UoY2hhbmdlZEtub2IpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IHRoaXMucHJvcHM7XG4gICAgY2hhbm5lbC5lbWl0KENIQU5HRSwgY2hhbmdlZEtub2IpO1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlKGNoYW5nZWRLbm9iKSB7XG4gICAgdGhpcy5sYXN0RWRpdCA9IGdldFRpbWVzdGFtcCgpO1xuICAgIGNvbnN0IHsga25vYnMgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgeyBuYW1lIH0gPSBjaGFuZ2VkS25vYjtcbiAgICBjb25zdCBuZXdLbm9icyA9IHsgLi4ua25vYnMgfTtcbiAgICBuZXdLbm9ic1tuYW1lXSA9IHtcbiAgICAgIC4uLm5ld0tub2JzW25hbWVdLFxuICAgICAgLi4uY2hhbmdlZEtub2IsXG4gICAgfTtcblxuICAgIHRoaXMuc2V0U3RhdGUoeyBrbm9iczogbmV3S25vYnMgfSk7XG5cbiAgICB0aGlzLnNldFN0YXRlKFxuICAgICAgeyBrbm9iczogbmV3S25vYnMgfSxcbiAgICAgIHRoaXMuZW1pdENoYW5nZShcbiAgICAgICAgY2hhbmdlZEtub2IudHlwZSA9PT0gJ251bWJlcidcbiAgICAgICAgICA/IHsgLi4uY2hhbmdlZEtub2IsIHZhbHVlOiBwYXJzZUZsb2F0KGNoYW5nZWRLbm9iLnZhbHVlKSB9XG4gICAgICAgICAgOiBjaGFuZ2VkS25vYlxuICAgICAgKVxuICAgICk7XG4gIH1cblxuICBoYW5kbGVDbGljayhrbm9iKSB7XG4gICAgY29uc3QgeyBjaGFubmVsIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY2hhbm5lbC5lbWl0KENMSUNLLCBrbm9iKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGFjdGl2ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmICghYWN0aXZlKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCB7IGtub2JzLCBncm91cElkOiBzdGF0ZUdyb3VwSWQgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICBjb25zdCBncm91cHMgPSB7fTtcbiAgICBjb25zdCBncm91cElkcyA9IFtdO1xuXG4gICAgbGV0IGtub2JzQXJyYXkgPSBPYmplY3Qua2V5cyhrbm9icyk7XG5cbiAgICBjb25zdCBrbm9ic1dpdGhHcm91cHMgPSBrbm9ic0FycmF5LmZpbHRlcigoa2V5KSA9PiBrbm9ic1trZXldLmdyb3VwSWQpO1xuXG4gICAga25vYnNXaXRoR3JvdXBzLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgY29uc3Qga25vYktleUdyb3VwSWQgPSBrbm9ic1trZXldLmdyb3VwSWQ7XG4gICAgICBncm91cElkcy5wdXNoKGtub2JLZXlHcm91cElkKTtcbiAgICAgIGdyb3Vwc1trbm9iS2V5R3JvdXBJZF0gPSB7XG4gICAgICAgIHJlbmRlcjogKCkgPT4gPFRleHQgaWQ9e2tub2JLZXlHcm91cElkfT57a25vYktleUdyb3VwSWR9PC9UZXh0PixcbiAgICAgICAgdGl0bGU6IGtub2JLZXlHcm91cElkLFxuICAgICAgfTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGFsbEhhdmVHcm91cHMgPSBncm91cElkcy5sZW5ndGggPiAwICYmIGtub2JzQXJyYXkubGVuZ3RoID09PSBrbm9ic1dpdGhHcm91cHMubGVuZ3RoO1xuXG4gICAgLy8gSWYgYWxsIG9mIHRoZSBrbm9icyBhcmUgYXNzaWduZWQgdG8gYSBncm91cCwgd2UgZG9uJ3QgbmVlZCB0aGUgZGVmYXVsdCBncm91cC5cbiAgICBjb25zdCBncm91cElkID1cbiAgICAgIHN0YXRlR3JvdXBJZCA9PT0gREVGQVVMVF9HUk9VUF9JRCAmJiBhbGxIYXZlR3JvdXBzXG4gICAgICAgID8ga25vYnNba25vYnNXaXRoR3JvdXBzWzBdXS5ncm91cElkXG4gICAgICAgIDogc3RhdGVHcm91cElkO1xuXG4gICAgaWYgKGdyb3VwSWRzLmxlbmd0aCA+IDApIHtcbiAgICAgIGlmICghYWxsSGF2ZUdyb3Vwcykge1xuICAgICAgICBncm91cHNbREVGQVVMVF9HUk9VUF9JRF0gPSB7XG4gICAgICAgICAgcmVuZGVyOiAoKSA9PiA8VGV4dCBpZD17REVGQVVMVF9HUk9VUF9JRH0+e0RFRkFVTFRfR1JPVVBfSUR9PC9UZXh0PixcbiAgICAgICAgICB0aXRsZTogREVGQVVMVF9HUk9VUF9JRCxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgaWYgKGdyb3VwSWQgPT09IERFRkFVTFRfR1JPVVBfSUQpIHtcbiAgICAgICAga25vYnNBcnJheSA9IGtub2JzQXJyYXkuZmlsdGVyKChrZXkpID0+ICFrbm9ic1trZXldLmdyb3VwSWQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZ3JvdXBJZCAhPT0gREVGQVVMVF9HUk9VUF9JRCkge1xuICAgICAgICBrbm9ic0FycmF5ID0ga25vYnNBcnJheS5maWx0ZXIoKGtleSkgPT4ga25vYnNba2V5XS5ncm91cElkID09PSBncm91cElkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBrbm9ic0FycmF5ID0ga25vYnNBcnJheS5tYXAoKGtleSkgPT4ga25vYnNba2V5XSk7XG5cbiAgICBpZiAoa25vYnNBcnJheS5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiA8VGV4dD5OTyBLTk9CUzwvVGV4dD47XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxWaWV3IHN0eWxlPXt7IGZsZXg6IDEsIHBhZGRpbmdUb3A6IDEwIH19PlxuICAgICAgICB7Z3JvdXBJZHMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgPEdyb3VwVGFicyBncm91cHM9e2dyb3Vwc30gb25Hcm91cFNlbGVjdD17dGhpcy5vbkdyb3VwU2VsZWN0fSBzZWxlY3RlZEdyb3VwPXtncm91cElkfSAvPlxuICAgICAgICApfVxuICAgICAgICA8Vmlldz5cbiAgICAgICAgICA8UHJvcEZvcm1cbiAgICAgICAgICAgIGtub2JzPXtrbm9ic0FycmF5fVxuICAgICAgICAgICAgb25GaWVsZENoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICBvbkZpZWxkQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9WaWV3PlxuICAgICAgICA8VG91Y2hhYmxlIG9uUHJlc3M9e3RoaXMucmVzZXR9PlxuICAgICAgICAgIDxSZXNldEJ1dHRvbj5SRVNFVDwvUmVzZXRCdXR0b24+XG4gICAgICAgIDwvVG91Y2hhYmxlPlxuICAgICAgPC9WaWV3PlxuICAgICk7XG4gIH1cbn1cblxuUGFuZWwucHJvcFR5cGVzID0ge1xuICBhY3RpdmU6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gIGNoYW5uZWw6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgZW1pdDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb246IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlbW92ZUxpc3RlbmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgfSkuaXNSZXF1aXJlZCxcbiAgb25SZXNldDogUHJvcFR5cGVzLm9iamVjdCwgLy8gZXNsaW50LWRpc2FibGUtbGluZVxufTtcbiJdfQ== */");

var Panel =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Panel, _React$Component);

  function Panel(props) {
    var _this;

    _classCallCheck(this, Panel);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, props));

    _this.reset = function () {
      var channel = _this.props.channel;

      _this.setState({
        knobs: {}
      });

      channel.emit(_addonKnobs.RESET);
    };

    _this.selectStory = function () {
      var channel = _this.props.channel;

      _this.setState({
        knobs: {},
        groupId: DEFAULT_GROUP_ID
      });

      channel.emit(_addonKnobs.RESET);
    };

    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));
    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));
    _this.setKnobs = _this.setKnobs.bind(_assertThisInitialized(_this));
    _this.reset = _this.reset.bind(_assertThisInitialized(_this));
    _this.setOptions = _this.setOptions.bind(_assertThisInitialized(_this));
    _this.onGroupSelect = _this.onGroupSelect.bind(_assertThisInitialized(_this));
    _this.state = {
      knobs: {},
      groupId: DEFAULT_GROUP_ID
    };
    _this.options = {};
    _this.lastEdit = getTimestamp();
    _this.loadedFromUrl = false;
    return _this;
  }

  _createClass(Panel, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var channel = this.props.channel;
      channel.on(_addonKnobs.SET, this.setKnobs);
      channel.on(_addonKnobs.SET_OPTIONS, this.setOptions);
      channel.on(_coreEvents.SELECT_STORY, this.selectStory);
      channel.emit(_coreEvents.FORCE_RE_RENDER);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var channel = this.props.channel;
      channel.removeListener(_addonKnobs.SET, this.setKnobs);
      channel.removeListener(_coreEvents.SELECT_STORY, this.selectStory);
    }
  }, {
    key: "onGroupSelect",
    value: function onGroupSelect(name) {
      this.setState({
        groupId: name
      });
    }
  }, {
    key: "setOptions",
    value: function setOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        timestamps: false
      };
      this.options = options;
    }
  }, {
    key: "setKnobs",
    value: function setKnobs(_ref3) {
      var knobs = _ref3.knobs,
          timestamp = _ref3.timestamp;

      if (!this.options.timestamps || !timestamp || this.lastEdit <= timestamp) {
        this.setState({
          knobs: knobs
        });
      }
    }
  }, {
    key: "emitChange",
    value: function emitChange(changedKnob) {
      var channel = this.props.channel;
      channel.emit(_addonKnobs.CHANGE, changedKnob);
    }
  }, {
    key: "handleChange",
    value: function handleChange(changedKnob) {
      this.lastEdit = getTimestamp();
      var knobs = this.state.knobs;
      var name = changedKnob.name;
      var newKnobs = Object.assign({}, knobs);
      newKnobs[name] = Object.assign({}, newKnobs[name], {}, changedKnob);
      this.setState({
        knobs: newKnobs
      });
      this.setState({
        knobs: newKnobs
      }, this.emitChange(changedKnob.type === 'number' ? Object.assign({}, changedKnob, {
        value: parseFloat(changedKnob.value)
      }) : changedKnob));
    }
  }, {
    key: "handleClick",
    value: function handleClick(knob) {
      var channel = this.props.channel;
      channel.emit(_addonKnobs.CLICK, knob);
    }
  }, {
    key: "render",
    value: function render() {
      var active = this.props.active;

      if (!active) {
        return null;
      }

      var _this$state = this.state,
          knobs = _this$state.knobs,
          stateGroupId = _this$state.groupId;
      var groups = {};
      var groupIds = [];
      var knobsArray = Object.keys(knobs);
      var knobsWithGroups = knobsArray.filter(function (key) {
        return knobs[key].groupId;
      });
      knobsWithGroups.forEach(function (key) {
        var knobKeyGroupId = knobs[key].groupId;
        groupIds.push(knobKeyGroupId);
        groups[knobKeyGroupId] = {
          render: function render() {
            return _react["default"].createElement(_reactNative.Text, {
              id: knobKeyGroupId
            }, knobKeyGroupId);
          },
          title: knobKeyGroupId
        };
      });
      var allHaveGroups = groupIds.length > 0 && knobsArray.length === knobsWithGroups.length; // If all of the knobs are assigned to a group, we don't need the default group.

      var groupId = stateGroupId === DEFAULT_GROUP_ID && allHaveGroups ? knobs[knobsWithGroups[0]].groupId : stateGroupId;

      if (groupIds.length > 0) {
        if (!allHaveGroups) {
          groups[DEFAULT_GROUP_ID] = {
            render: function render() {
              return _react["default"].createElement(_reactNative.Text, {
                id: DEFAULT_GROUP_ID
              }, DEFAULT_GROUP_ID);
            },
            title: DEFAULT_GROUP_ID
          };
        }

        if (groupId === DEFAULT_GROUP_ID) {
          knobsArray = knobsArray.filter(function (key) {
            return !knobs[key].groupId;
          });
        }

        if (groupId !== DEFAULT_GROUP_ID) {
          knobsArray = knobsArray.filter(function (key) {
            return knobs[key].groupId === groupId;
          });
        }
      }

      knobsArray = knobsArray.map(function (key) {
        return knobs[key];
      });

      if (knobsArray.length === 0) {
        return _react["default"].createElement(_reactNative.Text, null, "NO KNOBS");
      }

      return _react["default"].createElement(_reactNative.View, {
        style: {
          flex: 1,
          paddingTop: 10
        }
      }, groupIds.length > 0 && _react["default"].createElement(_GroupTabs["default"], {
        groups: groups,
        onGroupSelect: this.onGroupSelect,
        selectedGroup: groupId
      }), _react["default"].createElement(_reactNative.View, null, _react["default"].createElement(_PropForm["default"], {
        knobs: knobsArray,
        onFieldChange: this.handleChange,
        onFieldClick: this.handleClick
      })), _react["default"].createElement(Touchable, {
        onPress: this.reset
      }, _react["default"].createElement(ResetButton, null, "RESET")));
    }
  }]);

  return Panel;
}(_react["default"].Component);

exports["default"] = Panel;
Panel.propTypes = {
  active: _propTypes["default"].bool.isRequired,
  channel: _propTypes["default"].shape({
    emit: _propTypes["default"].func,
    on: _propTypes["default"].func,
    removeListener: _propTypes["default"].func
  }).isRequired,
  onReset: _propTypes["default"].object // eslint-disable-line

};