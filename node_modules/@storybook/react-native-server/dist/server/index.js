#!/usr/bin/env node
"use strict";

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.function.bind");

require("core-js/modules/es.object.define-property");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _querystring = _interopRequireDefault(require("querystring"));

var _ws = _interopRequireDefault(require("ws"));

var _standalone = _interopRequireDefault(require("@storybook/core/standalone"));

var _options = _interopRequireDefault(require("./options"));

var _cli = _interopRequireDefault(require("./cli"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Server =
/*#__PURE__*/
function () {
  function Server(options) {
    _classCallCheck(this, Server);

    this.attachWS = this.attachWS.bind(this);
    this.options = (0, _options["default"])(options, this.attachWS);
  }

  _createClass(Server, [{
    key: "start",
    value: function start() {
      return (0, _standalone["default"])(this.options);
    }
  }, {
    key: "attachWS",
    value: function attachWS(server) {
      var _this = this;

      this.wsServer = new _ws["default"].Server({
        server: server
      });
      this.wsServer.on('connection', function (s, req) {
        return _this.handleWS(s, req);
      });
    }
  }, {
    key: "handleWS",
    value: function handleWS(socket, req) {
      var _this2 = this;

      if (this.options.manualId) {
        var params = req.url ? _querystring["default"].parse(req.url.substr(1)) : {};

        if (params.pairedId) {
          socket.pairedId = params.pairedId; // eslint-disable-line
        }
      }

      socket.on('message', function (data) {
        _this2.wsServer.clients.forEach(function (c) {
          if (!_this2.options.manualId || socket.pairedId && socket.pairedId === c.pairedId) {
            c.send(data);
          }
        });
      });
    }
  }]);

  return Server;
}();

exports["default"] = Server;
var server = new Server((0, _cli["default"])());
server.start();