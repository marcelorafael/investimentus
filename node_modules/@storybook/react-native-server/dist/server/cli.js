"use strict";

require("core-js/modules/es.object.assign");

require("core-js/modules/es.parse-int");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.split");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseList = parseList;
exports["default"] = void 0;

var _path = _interopRequireDefault(require("path"));

var _commander = _interopRequireDefault(require("commander"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function parseList(str) {
  return str.split(',');
}

function getCli() {
  _commander["default"].option('-h, --host <host>', 'host to listen on', 'localhost').option('-p, --port <port>', 'port to listen on', function (str) {
    return parseInt(str, 10);
  }, 7007).option('-e, --environment [environment]', 'DEVELOPMENT/PRODUCTION environment for webpack').option('-i, --manual-id', 'allow multiple users to work with same storybook').option('-c, --config-dir [dir-name]', 'Directory where to load Storybook configurations from').option('--https', 'Serve Storybook over HTTPS. Note: You must provide your own certificate information.').option('--ssl-ca <ca>', 'Provide an SSL certificate authority. (Optional with --https, required if using a self-signed certificate)', parseList).option('--ssl-cert <cert>', 'Provide an SSL certificate. (Required with --https)').option('--ssl-key <key>', 'Provide an SSL key. (Required with --https)').option('--smoke-test', 'Exit after successful start').option('--ci', "CI mode (skip interactive prompts, don't open browser").option('--quiet', 'Suppress verbose build output').parse(process.argv);

  var configDir = _path["default"].resolve(_commander["default"].configDir || './storybook');

  return Object.assign({}, _commander["default"], {
    configDir: configDir
  });
}

var _default = getCli;
exports["default"] = _default;