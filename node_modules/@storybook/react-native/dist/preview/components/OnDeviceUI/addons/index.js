"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_native_1 = require("react-native");
var native_1 = __importDefault(require("@emotion/native"));
var addons_1 = __importDefault(require("@storybook/addons"));
var list_1 = __importDefault(require("./list"));
var wrapper_1 = __importDefault(require("./wrapper"));
var text_1 = require("../../Shared/text");
var NoAddonContainer = native_1.default.View({
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
});
var Container = native_1.default.View(function (_a) {
    var theme = _a.theme;
    return ({
        flex: 1,
        backgroundColor: theme.backgroundColor || 'white',
    });
});
var Addons = /** @class */ (function (_super) {
    __extends(Addons, _super);
    function Addons(props) {
        var _this = _super.call(this, props) || this;
        _this.panels = addons_1.default.getElements('panel');
        _this.onPressAddon = function (addonSelected) {
            _this.setState({ addonSelected: addonSelected });
        };
        _this.state = {
            addonSelected: Object.keys(_this.panels)[0] || null,
        };
        return _this;
    }
    Addons.prototype.render = function () {
        var addonSelected = this.state.addonSelected;
        if (Object.keys(this.panels).length === 0) {
            return (react_1.default.createElement(react_native_1.SafeAreaView, { style: { flex: 1 } },
                react_1.default.createElement(NoAddonContainer, null,
                    react_1.default.createElement(text_1.Label, null, "No addons loaded."))));
        }
        return (react_1.default.createElement(Container, null,
            react_1.default.createElement(react_native_1.SafeAreaView, { style: { flex: 1 } },
                react_1.default.createElement(list_1.default, { onPressAddon: this.onPressAddon, panels: this.panels, addonSelected: addonSelected }),
                react_1.default.createElement(wrapper_1.default, { addonSelected: addonSelected, panels: this.panels }))));
    };
    return Addons;
}(react_1.PureComponent));
exports.default = Addons;
