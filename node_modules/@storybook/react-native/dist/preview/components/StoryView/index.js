"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_native_1 = require("react-native");
var native_1 = __importDefault(require("@emotion/native"));
var addons_1 = __importDefault(require("@storybook/addons"));
var core_events_1 = __importDefault(require("@storybook/core-events"));
var HelpContainer = native_1.default.View(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  flex: 1;\n  padding-horizontal: 15;\n  padding-vertical: 15;\n  align-items: center;\n  justify-content: center;\n"], ["\n  flex: 1;\n  padding-horizontal: 15;\n  padding-vertical: 15;\n  align-items: center;\n  justify-content: center;\n"])));
var StoryView = /** @class */ (function (_super) {
    __extends(StoryView, _super);
    function StoryView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.forceReRender = function () {
            _this.forceUpdate();
        };
        _this.renderHelp = function () {
            var url = _this.props.url;
            return (react_1.default.createElement(HelpContainer, null, url && url.length ? (react_1.default.createElement(react_native_1.Text, null,
                "Please open the Storybook UI (",
                url,
                ") with a web browser and select a story for preview.")) : (react_1.default.createElement(react_native_1.Text, null, "Please open the Storybook UI with a web browser and select a story for preview."))));
        };
        _this.renderOnDeviceUIHelp = function () { return (react_1.default.createElement(HelpContainer, null,
            react_1.default.createElement(react_native_1.Text, null, "Please open navigator and select a story to preview."))); };
        return _this;
    }
    StoryView.prototype.componentDidMount = function () {
        var channel = addons_1.default.getChannel();
        channel.on(core_events_1.default.STORY_RENDER, this.forceReRender);
        channel.on(core_events_1.default.FORCE_RE_RENDER, this.forceReRender);
    };
    StoryView.prototype.componentDidUpdate = function () {
        var channel = addons_1.default.getChannel();
        var stories = this.props.stories;
        var storyId = stories.getSelection().storyId;
        if (storyId) {
            channel.emit(core_events_1.default.STORY_RENDERED, { storyId: storyId });
        }
    };
    StoryView.prototype.componentWillUnmount = function () {
        var channel = addons_1.default.getChannel();
        channel.removeListener(core_events_1.default.STORY_RENDER, this.forceReRender);
        channel.removeListener(core_events_1.default.FORCE_RE_RENDER, this.forceReRender);
    };
    StoryView.prototype.render = function () {
        var _a = this.props, onDevice = _a.onDevice, stories = _a.stories;
        var storyId = stories.getSelection().storyId;
        var story = stories.fromId(storyId);
        if (story && story.storyFn) {
            var id = story.id, storyFn = story.storyFn;
            return (react_1.default.createElement(react_native_1.View, { key: id, testID: id, style: { flex: 1 } }, storyFn()));
        }
        if (onDevice) {
            return this.renderOnDeviceUIHelp();
        }
        return this.renderHelp();
    };
    return StoryView;
}(react_1.Component));
exports.default = StoryView;
var templateObject_1;
